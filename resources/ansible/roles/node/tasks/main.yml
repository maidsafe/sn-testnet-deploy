---
# This role assumes the existence of the node manager, which is setup using another role.
- name: get the private IP for the instance
  set_fact:
    node_rpc_ip: "{{ instance_facts.instances[0].network_interfaces[0].private_ip_address }}"
  when: provider == "aws" and public_rpc

- name: use the public IP as the RPC address on DO
  set_fact:
    node_rpc_ip: "{{ ansible_host }}"
  when: provider == "digital-ocean" and public_rpc
#
# Setup genesis node on genesis run
#
- name: check if genesis node is already set up
  become: True
  ansible.builtin.command: safenode-manager status --json
  register: genesis_status
  when: is_genesis

- name: parse genesis node status
  set_fact:
    genesis_exists: "{{ (genesis_status.stdout | from_json).nodes | selectattr('genesis', 'equalto', true) | list | length > 0 }}"
  when: is_genesis and genesis_status.stdout != ""

- name: add genesis node service
  become: True
  ansible.builtin.command:
    # The `omit` filter is used to remove arguments that don't have values
    argv: "{{ command_args | reject('equalto', omit) | list }}"
  vars:
    command_args:
      - "{{ binary_dir }}/safenode-manager"
      - -v
      - add
      - --first
      - --rpc-address={{ node_rpc_ip }}
      - "{{ ('--log-format=' + log_format) if log_format is defined else omit }}"
      - "{{ ('--env=' + env_variables) if env_variables is defined else omit }}"
      - "{{ ('--version=' + version) if version is defined else ('--url=' + node_archive_url) }}"
  when: is_genesis and not genesis_exists | default(false)

#
# Calculate the number of nodes to add
#
- name: check current number of node services
  become: True
  ansible.builtin.command: safenode-manager status --json
  register: node_status

- name: calculate current non-genesis node count
  set_fact:
    current_node_count: "{{ (node_status.stdout | from_json).nodes | selectattr('genesis', 'equalto', false) | list | length }}"
  when: node_status.stdout != ""

- name: calculate number of nodes to add
  set_fact:
    nodes_to_add: "{{ node_instance_count | int - (current_node_count | default(0)) | int }}"

# 
# Calculate the port range
#
- name: check if we need a port range
  set_fact:
    use_port_range: "{{ nodes_to_add | default(0) | int > 1 }}"
    rpc_port: "{{ initial_rpc_start_port | int + (current_node_count | default(0)) | int }}"
    metrics_port: "{{ initial_metrics_start_port | int + (current_node_count | default(0)) | int }}"
  when: nodes_to_add | default(0) | int > 0

- name: calculate start port
  set_fact:
    rpc_start_port: "{{ initial_rpc_start_port | int + (current_node_count | default(0)) | int }}"
    metrics_start_port: "{{ initial_metrics_start_port | int + (current_node_count | default(0)) | int }}"
  when: use_port_range

- name: calculate end port
  set_fact:
    rpc_end_port: "{{ rpc_start_port | int + nodes_to_add | int - 1 | int }}"
    metrics_end_port: "{{ metrics_start_port | int + nodes_to_add | int - 1 | int }}"
  when: use_port_range

#
# Add the nodes
#
- name: add node services
  become: True
  ansible.builtin.command:
    # The `omit` filter is used to remove arguments that don't have values
    argv: "{{ command_args | reject('equalto', omit) | list }}"
  vars:
    command_args:
      - "{{ binary_dir }}/safenode-manager"
      - -v
      - add
      - "--count={{ nodes_to_add }}"
      - "--owner=maidsafe"
      - "--peer={{ genesis_multiaddr }}"
      - --rpc-address={{ node_rpc_ip }}
      - "{{ ('--rpc-port=' + rpc_port) if not use_port_range else omit }}"
      - "{{ ('--rpc-port=' + rpc_start_port + '-' + rpc_end_port) if use_port_range else omit }}"
      - "{{ ('--metrics-port=' + metrics_port) if not use_port_range else omit }}"
      - "{{ ('--metrics-port=' + metrics_start_port + '-' + metrics_end_port) if use_port_range else omit }}"
      - "{{ ('--log-format=' + log_format) if log_format is defined else omit }}"
      - "{{ ('--env=' + env_variables) if env_variables is defined else omit }}"
      - "{{ ('--version=' + version) if version is defined else ('--url=' + node_archive_url) }}"
  when: not is_genesis and nodes_to_add | default(0) | int > 0

# set "interval" to override dynamic startup delay
- name: start the node services
  become: True
  command: safenode-manager -v start --interval 200
