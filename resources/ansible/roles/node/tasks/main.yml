---
# This role assumes the existence of the node manager, which is setup using another role.
- name: get the private IP for the instance
  set_fact:
    node_rpc_ip: "{{ instance_facts.instances[0].network_interfaces[0].private_ip_address }}"
  when: provider == "aws" and public_rpc

- name: use the public IP as the RPC address on DO
  set_fact:
    node_rpc_ip: "{{ ansible_host }}"
  when: provider == "digital-ocean" and public_rpc

#
# Calculate the number of nodes to add
#
- name: check current number of node services
  become: True
  ansible.builtin.command: antctl status --json
  register: node_status

- name: calculate current non-genesis node count
  set_fact:
    current_node_count: "{{ (node_status.stdout | from_json).nodes | selectattr('initial_peers_config.first', 'equalto', false) | list | length }}"
  when: node_status.stdout != ""

- name: calculate number of nodes to add
  set_fact:
    nodes_to_add: "{{ node_instance_count | int - (current_node_count | default(0)) | int }}"

# 
# Calculate the port range
#
- name: check if we need a port range
  set_fact:
    use_port_range: "{{ nodes_to_add | default(0) | int > 1 }}"
    rpc_port: "{{ initial_rpc_start_port | int + (current_node_count | default(0)) | int }}"
    metrics_port: "{{ initial_metrics_start_port | int + (current_node_count | default(0)) | int }}"
    node_port: "{{ initial_node_start_port | int + (current_node_count | default(0)) | int }}"
  when: nodes_to_add | default(0) | int > 0

- name: set default value for use_port_range
  set_fact:
    use_port_range: false
  when: use_port_range is not defined

- name: calculate start port
  set_fact:
    rpc_start_port: "{{ initial_rpc_start_port | int + (current_node_count | default(0)) | int }}"
    metrics_start_port: "{{ initial_metrics_start_port | int + (current_node_count | default(0)) | int }}"
    node_start_port: "{{ initial_node_start_port | int + (current_node_count | default(0)) | int }}"
  when: use_port_range | bool

- name: calculate end port
  set_fact:
    rpc_end_port: "{{ rpc_start_port | int + nodes_to_add | int - 1 | int }}"
    metrics_end_port: "{{ metrics_start_port | int + nodes_to_add | int - 1 | int }}"
    node_end_port: "{{ node_start_port | int + nodes_to_add | int - 1 | int }}"
  when: use_port_range

#
# Obtain private IP if relay is set
#
- name: get private ip of eth1
  shell: ip -4 addr show dev eth1 | grep inet | awk '{print $2}' | cut -d/ -f1
  register: private_ip_eth1
  when: private_ip | bool or enable_upnp | bool

#
# Add the nodes
#
- name: add node services
  become: True
  ansible.builtin.command:
    argv: "{{ command_args | reject('equalto', omit) | list }}"
  vars:
    command_args:
      - "{{ binary_dir }}/antctl"
      - -v
      - add
      - "{{ '--no-upnp' if not (enable_upnp | default(false)) else omit }}"
      - --data-dir-path=/mnt/antnode-storage/data
      - --log-dir-path=/mnt/antnode-storage/log
      - "--count={{ nodes_to_add }}"
      - "{{ ('--peer=' + genesis_multiaddr) if genesis_multiaddr is defined else omit }}"
      - "{{ ('--network-contacts-url=' + network_contacts_url) if network_contacts_url is defined and network_contacts_url else omit }}"
      - "{{ ('--network-id=' + network_id) if network_id is defined and network_id else omit }}"
      - "--rpc-address={{ node_rpc_ip }}"
      - "--rewards-address={{ rewards_address }}"
      - "--max-archived-log-files={{ max_archived_log_files }}"
      - "--max-log-files={{ max_log_files }}"
      - "{{ ('--node-ip=' + private_ip_eth1.stdout) if (enable_upnp | bool) or (private_ip | bool) else omit }}"
      - "{{ '--relay' if relay | bool else omit }}"
      - "{{ ('--rpc-port=' + rpc_port|string) if not use_port_range else omit }}"
      - "{{ ('--rpc-port=' + rpc_start_port|string + '-' + rpc_end_port|string) if use_port_range else omit }}"
      - "{{ ('--metrics-port=' + metrics_port|string) if not use_port_range else omit }}"
      - "{{ ('--metrics-port=' + metrics_start_port|string + '-' + metrics_end_port|string) if use_port_range else omit }}"
      - "{{ ('--node-port=' + node_port|string) if not use_port_range else omit }}"
      - "{{ ('--node-port=' + node_start_port|string + '-' + node_end_port|string) if use_port_range else omit }}"
      - "{{ ('--log-format=' + log_format) if log_format is defined else omit }}"
      - "{{ ('--env=' + node_env_variables) if node_env_variables is defined else omit }}"
      - "{{ ('--version=' + version) if version is defined else ('--url=' + node_archive_url) }}"
      - "{{ '--write-older-cache-files' if write_older_cache_files | bool else omit }}"
      - "{{ evm_network_type }}"
      - "{{ ('--rpc-url=' + evm_rpc_url) if evm_network_type == 'evm-custom' else omit }}"
      - "{{ ('--payment-token-address=' + evm_payment_token_address) if evm_network_type == 'evm-custom' else omit }}"
      - "{{ ('--data-payments-address=' + evm_data_payments_address) if evm_network_type == 'evm-custom' else omit }}"
  when: nodes_to_add | default(0) | int > 0

- name: start the node services
  become: True
  command: antctl -v start --interval {{ interval}}
  register: start_services_result
  failed_when: false

- name: log node services start failures
  ansible.builtin.debug:
    msg: "Warning: starting node services failed on {{ inventory_hostname }} with return code {{ start_services_result.rc }}"
  when: 
    - start_services_result.rc is defined
    - start_services_result.rc != 0
