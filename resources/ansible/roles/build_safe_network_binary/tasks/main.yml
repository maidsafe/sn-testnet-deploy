---
- name: store s3_deploy secret access key
  set_fact:
    aws_secret_key: "{{ lookup('file', 'files/s3_deploy_secret_access_key') }}"

- name: clone safe_network repo
  ansible.builtin.git:
    repo: https://github.com/{{ org }}/safe_network
    version: "{{ branch }}"
    dest: "{{ ansible_env.HOME }}/safe_network"

# only enable safenode features
- name: "build {{ bin_name }} binary"
  ansible.builtin.shell: |
    source $HOME/.cargo/env
    {% if bin_name == 'safenode' and safenode_features_list != "" %}
    cargo build --target x86_64-unknown-linux-musl --release --bin {{bin_name}} --no-default-features --features={{safenode_features_list}}
    {% else %}
    cargo build --target x86_64-unknown-linux-musl --release --bin {{bin_name}}
    {% endif %}
  args:
    chdir: "{{ ansible_env.HOME }}/safe_network"
    creates: "{{ ansible_env.HOME }}/safe_network/target/x86_64-unknown-linux-musl/release/{{bin_name}}"
    executable: /bin/bash

- name: copy binary to tmp directory
  ansible.builtin.command:
    chdir: "{{ ansible_env.HOME }}/safe_network/target/x86_64-unknown-linux-musl/release"
    cmd: cp {{bin_name}} /tmp/

- name: archive binary
  ansible.builtin.command:
    chdir: /tmp/
    cmd: tar -zcvf {{ bin_archive_filename }} {{ bin_name }}

- name: upload archive to S3
  amazon.aws.s3_object:
    access_key: AKIAVVODCRMSELAPBQHK
    secret_key: "{{ aws_secret_key }}"
    bucket: sn-node
    object: /{{ org }}/{{ branch }}/{{ bin_archive_filename }}
    src: /tmp/{{ bin_archive_filename }}
    mode: put
    permission: public-read
