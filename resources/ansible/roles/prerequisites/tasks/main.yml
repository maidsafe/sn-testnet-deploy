---
- name: update apt cache
  apt:
    update_cache: yes

# DO machines may run cloud-init that may cause apt locks. Wait for it to complete.
- name: Wait for cloud-init / user-data to finish
  command: cloud-init status --wait
  changed_when: false
  when: provider == "digital-ocean"

- name: Wait for cloud init to finish
  community.general.cloud_init_data_facts:
    filter: status
  register: res
  until: "res.cloud_init_data_facts.status.v1.stage is defined and not res.cloud_init_data_facts.status.v1.stage"
  when: provider == "digital-ocean"
  retries: 50
  delay: 5

# The retries are for random lock failures.
- name: install packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items:
    - heaptrack
    - python3
    - python3-pip
    - ripgrep
    - zip
    - jq
  register: result
  until: result is succeeded
  retries: 20
  delay: 10

- name: install boto3
  ansible.builtin.pip:
    name: boto3
    state: present

- name: user for running node
  ansible.builtin.user:
    name: safe
    shell: /bin/bash

- name: create .ssh directory for safe user
  ansible.builtin.file:
    path: /home/safe/.ssh
    owner: safe
    group: safe
    state: directory
    mode: '0755'

# This is necessary for the logstash service, which runs as the logstash user, to
# read the log files under /home/safe/.local/share/safe/node.
- name: make home directory accessible for logstash user
  ansible.builtin.file:
    path: /home/safe
    mode: '0755'

# This is a bit of a hack, but it allows the `safe` user to have SSH access using the same
# authorized_keys, which is useful for running utility scripts.
- name: create .ssh directory for safe user
  ansible.builtin.file:
    path: /home/safe/.ssh
    owner: safe
    group: safe
    state: directory
    mode: '0755'
  when: provider == "digital-ocean"

- name: copy authorized_keys to safe user
  ansible.builtin.copy:
    src: /root/.ssh/authorized_keys
    dest: /home/safe/.ssh/authorized_keys
    owner: safe
    group: safe
    remote_src: true
    mode: '0600'
  when: provider == "digital-ocean"
